{"version":3,"sources":["images/cybereye.jpg","logo.svg","images/woman-face-forward-view.jpg","components/app/AppHeader.js","components/app/AppFooter.js","components/app/AppCanvas.js","components/app/AppDemo01.js","components/app/AppDemo02.js","pages/pages.js","pages/admin/Admin.js","pages/Pushup.js","pages/utils.js","pages/PoseNet.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","AppHeader","className","style","backgroundColor","to","defaultProps","AppFooter","src","logo","alt","width","height","borderRadius","href","AppCanvas","length","canvasRef","useRef","useState","window","innerWidth","canvasSize","setCanvasSize","randomStars","Array","map","c","i","x","Math","random","y","radius","originRadius","stars","rAF","setRAF","lastMove","drawStars","t","canvasObj","current","ctx","getContext","w","h","strokeStyle","fillStyle","fillRect","star","floor","beginPath","arc","PI","fill","requestAnimationFrame","useEffect","console","log","cancelAnimationFrame","handleResize","removeEventListener","ref","onMouseMove","e","mouseX","clientX","mouseY","clientY","closeStar","xDist","yDist","distanceToMouse","sqrt","push","j","s1","s2","moveTo","lineTo","stroke","AppDemo01","size","color","AppDemo02","Home","About","Products","News","Demos","Whoop404","Admin","propTypes","toTuple","drawKeyPoints","keypoints","minPoseConfidence","skeletonColor","canvasContext","scale","forEach","keypoint","score","position","drawSegment","lineWidth","firstX","firstY","nextX","nextY","drawSkeleton","skeletonLineWidth","posenet","Pushup","props","getCanvas","elem","canvas","getVideo","video","navigator","mediaDevices","getUserMedia","Error","this","videoWidth","videoHeight","facingMode","stream","srcObject","Promise","resolve","onloadedmetadata","setupCamera","play","poseDetectionFrame","algorithm","imageScaleFactor","flipHorizontal","outputStride","minPartConfidence","maxPoseDetections","nmsRadius","showVideo","showPoints","showSkeleton","posenetModel","findPoseDerectionFrame","a","poses","estimateMultiplePoses","estimateSinglePose","pose","clearRect","save","translate","drawImage","restore","setTimeout","setState","loading","detectPose","id","playsInline","React","Component","loadingText","minConfidence","adjacentKeyPoints","PoseNet","audio","findPoseDetectionFrame","App","from","exact","path","component","render","url","match","Boolean","location","hostname","ReactDOM","StrictMode","basename","document","getElementById","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"2GAAAA,EAAOC,QAAU,IAA0B,sC,4ECA3CD,EAAOC,QAAU,IAA0B,kC,mBCA3CD,EAAOC,QAAU,IAA0B,qD,oNCK3C,SAASC,EAAT,GACI,OADsB,eAElB,oCACA,yBAAKC,UAAU,gEAAgEC,MAAO,CAACC,gBAAiB,YACpG,wBAAIF,UAAU,mBAAd,eACA,yBAAKA,UAAU,wBACX,kBAAC,IAAD,CAAMG,GAAG,IAAIH,UAAU,OAAvB,UACA,kBAAC,IAAD,CAAMG,GAAG,WAAWH,UAAU,OAA9B,aACA,kBAAC,IAAD,CAAMG,GAAG,QAAQH,UAAU,OAA3B,WACA,kBAAC,IAAD,CAAMG,GAAG,SAASH,UAAU,OAA5B,eAOhBD,EAAUK,aAAe,GAKVL,QCpBf,SAASM,EAAT,GACI,OADsB,eAElB,oCACA,4BAAQL,UAAU,qCACd,yBAAKA,UAAU,OACX,yBAAKA,UAAU,iBACX,yBAAKM,IAAKC,IAAMC,IAAI,GAAGP,MAAO,CAACQ,MAAO,GAAIC,OAAQ,GAAIC,aAAc,MADxE,QAEI,2BAAOX,UAAU,2BAAjB,cAKJ,yBAAKA,UAAU,gBACX,0CACA,wBAAIA,UAAU,4BACV,4BAAI,uBAAGA,UAAU,aAAaY,KAAK,KAA/B,2BAER,wBAAIZ,UAAU,4BACV,4BAAI,uBAAGA,UAAU,aAAaY,KAAK,KAA/B,0BAGZ,yBAAKZ,UAAU,gBACX,yCACA,wBAAIA,UAAU,4BACV,4BAAI,uBAAGA,UAAU,aAAaY,KAAK,KAA/B,eAER,wBAAIZ,UAAU,4BACV,4BAAI,uBAAGA,UAAU,aAAaY,KAAK,KAA/B,gBAS5BP,EAAUD,aAAe,GAKVC,Q,wBC5Cf,SAASQ,EAAT,GAA0B,eACtB,IAEoBC,EAFdC,EAAYC,mBADG,EAEiBC,mBAAS,CAACR,MAAOS,OAAOC,WAAYT,OAAQ,MAF7D,mBAEdU,EAFc,KAEFC,EAFE,KAIfC,GADcR,EACY,GADN,YAAQS,MAAMT,KACJU,KAAI,SAACC,EAAGC,GACpC,IAAIC,EAAIC,KAAKC,SAAWT,EAAWX,MAC/BqB,EAAIF,KAAKC,SAAWT,EAAWV,OAC/BqB,EAAyB,EAAhBH,KAAKC,SAElB,MAAQ,CAAEF,IAAGG,IAAGC,SAASC,aADND,MARN,EAWMd,mBAASK,GAXf,mBAWdW,EAXc,aAYChB,mBAAS,OAZV,mBAYdiB,EAZc,KAYTC,EAZS,KAejBC,EAAW,EACTC,EAAY,SAAZA,EAAaC,GACf,GAAKA,EAAIF,EAHC,IAGkB,CACxB,IAAMG,EAAYxB,EAAUyB,QACtBC,EAAMF,EAAUG,WAAW,MACnBC,EAAgBJ,EAAvB9B,MAAkBmC,EAAKL,EAAb7B,OAEjB+B,EAAII,YAAc,QAClBJ,EAAIK,UAAW,UACfL,EAAIM,SAAS,EAAG,EAAGJ,EAAGC,GAEtBH,EAAIK,UAAW,QATS,oBAUPb,GAVO,IAUxB,2BAAwB,CAAC,IAAhBe,EAAe,QACpBA,EAAKrB,GAAKC,KAAKC,UAAYD,KAAKqB,MAAsB,EAAhBrB,KAAKC,UAAgB,GAAK,GAChEmB,EAAKrB,GAAKP,EAAWX,MACrBuC,EAAKlB,GAAKF,KAAKC,SACfmB,EAAKlB,GAAKV,EAAWV,OAJD,IAKfiB,EAAgBqB,EAAhBrB,EAAGG,EAAakB,EAAblB,EAAGC,EAAUiB,EAAVjB,OACXU,EAAIS,YACJT,EAAIU,IAAIxB,EAAGG,EAAGC,EAAQ,EAAa,EAAVH,KAAKwB,IAAQ,GACtCX,EAAIY,QAlBgB,8BAqBxBjB,EAAWE,EAEfH,EAAOmB,sBAAsBjB,KAuDjC,OArBAkB,qBAAU,WAGN,OAFAC,QAAQC,IAAK,cACbtB,EAAOmB,sBAAsBjB,IACtB,WACHmB,QAAQC,IAAK,cACbC,qBAAqBxB,MAE1B,CAACD,IAEJsB,qBAAU,WACN,SAASI,IACLH,QAAQC,IAAK,WACbpC,EAAc,CAACZ,MAAOS,OAAOC,WAAYT,OAAQ,MAIrD,OAAO,WACHQ,OAAO0C,oBAAoB,SAAUD,OAKzC,yBAAK3D,UAAU,OACX,4BACI6D,IAAK9C,EACLN,MAAOW,EAAWX,MAClBC,OAAQU,EAAWV,OACnBoD,YA1DY,SAACC,GACrB,IAD2B,EACvBC,EAASD,EAAEE,QACXC,EAASH,EAAEI,QACTC,EAAY,GAHS,cAIVnC,GAJU,IAI3B,2BAAwB,CAAC,IAAhBe,EAAe,QACfrB,EAAQqB,EAARrB,EAAGG,EAAKkB,EAALlB,EACFuC,EAAQL,EAASrC,EACjB2C,EAAQJ,EAASpC,EACjByC,EAAkB3C,KAAK4C,KAAKH,EAAQA,EAAQC,EAAQA,GAC1DtB,EAAKjB,OAAUwC,EAAkB,IAAO,EAAIvB,EAAKhB,aAC7CuC,EAAkB,KAClBH,EAAUK,KAAKzB,IAXI,8BAiB3B,IAHA,IACMP,EADY1B,EAAUyB,QACNE,WAAW,MAExBhB,EAAI,EAAGA,EAAI0C,EAAUtD,OAAQY,IAAM,CACxC,IAAMgD,EAAI9C,KAAKqB,MAAMrB,KAAKC,SAAWuC,EAAUtD,QACzC6D,EAAKP,EAAU1C,GACfkD,EAAKR,EAAUM,GAErBjC,EAAIS,YACJT,EAAIoC,OAAOF,EAAGhD,EAAGgD,EAAG7C,GACpBW,EAAIqC,OAAOF,EAAGjD,EAAGiD,EAAG9C,GACpBW,EAAIsC,cAuChBlE,EAAUT,aAAe,GAKVS,Q,eCvGf,SAASmE,EAAT,GACI,OADsB,eAElB,oCACA,yBAAKhF,UAAU,YACX,yBAAKA,UAAU,wBACX,yBAAKA,UAAU,0BACX,6BACI,kBAAC,IAAD,CAAQiF,KAAM,OAElB,yBAAKjF,UAAU,kBACX,wBAAIA,UAAU,cAAd,sBACA,uBAAGA,UAAU,aAAb,ogBAGA,uBAAGY,KAAK,IAAIZ,UAAU,mBAAtB,kBAMhB,yBAAKA,UAAU,YACX,yBAAKA,UAAU,gCACX,yBAAKA,UAAU,iBACX,kBAAC,IAAD,CAAOiF,KAAM,GAAIC,MAAM,UAAUlF,UAAU,iBAC3C,yBAAKA,UAAU,yBACX,wBAAIA,UAAU,cAAd,cACA,uBAAGA,UAAU,aAAb,wGAKZ,yBAAKA,UAAU,YACX,yBAAKA,UAAU,iBACX,kBAAC,IAAD,CAAOiF,KAAM,GAAIC,MAAM,UAAWlF,UAAU,iBAC5C,yBAAKA,UAAU,yBACX,wBAAIA,UAAU,cAAd,oBACA,uBAAGA,UAAU,aAAb,wGAKZ,yBAAKA,UAAU,YACX,yBAAKA,UAAU,iBACX,kBAAC,IAAD,CAAeiF,KAAM,GAAIC,MAAM,UAAWlF,UAAU,iBACpD,yBAAKA,UAAU,yBACX,wBAAIA,UAAU,cAAd,cACA,uBAAGA,UAAU,aAAb,wGAKZ,yBAAKA,UAAU,YACX,yBAAKA,UAAU,iBACX,kBAAC,IAAD,CAAUiF,KAAM,GAAIC,MAAM,UAAWlF,UAAU,iBAC/C,yBAAKA,UAAU,yBACX,wBAAIA,UAAU,cAAd,aACA,uBAAGA,UAAU,aAAb,yGAOhB,yBAAKA,UAAU,YACX,yBAAKA,UAAU,6BACX,wDACA,sIAMR,yBAAKA,UAAU,OACX,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,eAAf,sBAIJ,yBAAKA,UAAU,OACX,yBAAKA,UAAU,SACX,kBAAC,IAAD,CAAWiF,KAAM,KADrB,IAC2B,6BAD3B,WAIA,yBAAKjF,UAAU,SACX,kBAAC,IAAD,CAASiF,KAAM,KADnB,IACyB,6BADzB,WAMR,yBAAKjF,UAAU,OACX,yBAAKA,UAAU,OAAf,uBACA,yBAAKA,UAAU,OACX,yBAAKA,UAAU,OACX,kBAAC,IAAD,CAAYiF,KAAM,KADtB,IAC6B,6BAD7B,cAIA,yBAAKjF,UAAU,OACX,kBAAC,IAAD,CAASiF,KAAM,KADnB,IAC0B,6BAD1B,iBAKJ,yBAAKjF,UAAU,OACX,yBAAKA,UAAU,OACX,kBAAC,IAAD,CAAaiF,KAAM,KADvB,IAC8B,6BAD9B,eAIA,yBAAKjF,UAAU,OACX,kBAAC,IAAD,CAAgBiF,KAAM,KAD1B,IACiC,6BADjC,aAMR,yBAAKjF,UAAU,OACX,yBAAKA,UAAU,OAAf,YACA,yBAAKA,UAAU,OACX,yBAAKA,UAAU,OACX,kBAAC,IAAD,CAAaiF,KAAM,GAAIC,MAAM,SADjC,IAC2C,6BAD3C,SAIA,yBAAKlF,UAAU,OACX,kBAAC,IAAD,CAAaiF,KAAM,KADvB,IAC8B,6BAD9B,YAMR,yBAAKjF,UAAU,OACX,yBAAKA,UAAU,OAAf,aACA,yBAAKA,UAAU,OACX,yBAAKA,UAAU,OACX,kBAAC,IAAD,CAAUiF,KAAM,KADpB,IAC2B,6BAD3B,UAIA,yBAAKjF,UAAU,OACX,kBAAC,IAAD,CAAMiF,KAAM,KADhB,IACuB,6BADvB,kBAWpBD,EAAU5E,aAAe,GAKV4E,QC9Jf,SAASG,EAAT,GACI,OADsB,eAElB,yBAAKnF,UAAU,OAAf,eAMRmF,EAAU/E,aAAe,GCLlB,SAASgF,IACZ,OACI,oCACA,kBAAC,EAAD,UACA,yBAAKpF,UAAU,aACP,kBAAC,EAAD,QAQT,SAASqF,IACZ,OACI,yBAAKrF,UAAU,aACX,wCAOL,SAASsF,IACZ,OACI,yBAAKtF,UAAU,aACX,2CAQL,SAASuF,IACZ,OACI,yBAAKvF,UAAU,aACX,uCAOL,SAASwF,IACZ,OACI,qCAMD,SAASC,IACZ,OACI,yBAAKzF,UAAU,aACX,2C,iBCzDZ,SAAS0F,EAAT,GACI,OADkB,eAEd,qCAKRA,EAAMtF,aAAe,GAErBsF,EAAMC,UAAY,GAGHD,Q,gECPf,SAASE,EAAT,GACI,MAAO,CADc,EAAPjE,EAAO,EAAJG,GAIrB,SAAS+D,EACLC,EACAC,EACAC,EACAC,GAED,IADCC,EACF,uDADQ,EAENJ,EAAUK,SAAQ,SAAAC,GACd,GAAIA,EAASC,OAASN,EAAmB,CAAC,IAAD,EACtBK,EAASE,SAAjB3E,EAD8B,EAC9BA,EAAGG,EAD2B,EAC3BA,EACVmE,EAAc/C,YACd+C,EAAc9C,IAAKxB,EAAIuE,EAAOpE,EAAEoE,EAjBxB,EAiB4C,EAAG,EAAItE,KAAKwB,IAChE6C,EAAcnD,UAAYkD,EAC1BC,EAAc5C,WAK1B,SAASkD,EAAT,IAGIrB,EACAsB,EACAN,EACAD,GACD,IAAD,mBANGQ,EAMH,KANWC,EAMX,wBALGC,EAKH,KALUC,EAKV,KACEX,EAAc/C,YACd+C,EAAcpB,OAAO4B,EAASP,EAAOQ,EAASR,GAC9CD,EAAcnB,OAAO6B,EAAQT,EAAOU,EAAQV,GAC5CD,EAAcO,UAAYA,EAC1BP,EAAcpD,YAAcqC,EAC5Be,EAAclB,SAGlB,SAAS8B,EACLf,EACAC,EACAC,EACAc,EACAb,GAED,IADCC,EACF,uDADQ,EAEoBa,IAA8BjB,EAAWC,GACnEQ,EACIX,EAAQE,EAAU,GAAGQ,UACrBV,EAAQE,EAAU,GAAGQ,UACrBN,EACAc,EACAZ,EACAD,G,IAKFe,E,kDA8JF,WAAYC,GAAQ,IAAD,8BACf,cAAMA,EAAOD,EAAO5G,eAGxB8G,UAAY,SAAAC,GACR,EAAKC,OAASD,GALC,EAQnBE,SAAW,SAAAF,GACP,EAAKG,MAAQH,GATE,E,wLAzIVI,UAAUC,cAAgBD,UAAUC,aAAaC,c,sBAC5C,IAAIC,MACN,iE,cAGRlE,QAAQC,IAAKkE,KAAKV,O,EACgBU,KAAKV,MAAhCW,E,EAAAA,WAAYC,E,EAAAA,aACbP,EAAQK,KAAKL,OACb7G,MAAQmH,EACdN,EAAM5G,OAASmH,E,SAEMN,UAAUC,aAAaC,aAAa,CACrD,OAAS,EACT,MAAS,CACLK,WAAY,OACZrH,MAAOmH,EACPlH,OAAQmH,K,cALVE,E,OAQNT,EAAMU,UAAYD,E,kBAEX,IAAIE,SAAQ,SAACC,GAChBZ,EAAMa,iBAAmB,WACrBD,EAAQZ,Q,yQAMIK,KAAKS,c,cAAnBd,E,QACAe,O,kBAECf,G,yIAGG,IAAD,EACyBK,KAAKV,MAAhCW,EADE,EACFA,WAAYC,EADV,EACUA,YACbT,EAASO,KAAKP,OACdnB,EAAgBmB,EAAO1E,WAAW,MAExC0E,EAAO3G,MAAQmH,EACfR,EAAO1G,OAASmH,EAEhBF,KAAKW,mBAAmBrC,K,yCAGTA,GAAgB,IAAD,EAI1B0B,KAAKV,MAFLsB,EAF0B,EAE1BA,UAAWC,EAFe,EAEfA,iBAAkBC,EAFH,EAEGA,eAAgBC,EAFnB,EAEmBA,aAAc3C,EAFjC,EAEiCA,kBAAmB4C,EAFpD,EAEoDA,kBAAmBC,EAFvE,EAEuEA,kBAAmBC,EAF1F,EAE0FA,UACpHjB,EAH0B,EAG1BA,WAAYC,EAHc,EAGdA,YAAaiB,EAHC,EAGDA,UAAWC,EAHV,EAGUA,WAAYC,EAHtB,EAGsBA,aAAchD,EAHpC,EAGoCA,cAAec,EAHnD,EAGmDA,kBAG3EmC,EAAetB,KAAKZ,QACpBO,EAAQK,KAAKL,MAEb4B,EAAsB,uCAAG,8BAAAC,EAAA,sDACvBC,EAAQ,GADe,KAGnBb,EAHmB,OAIlB,eAJkB,OAUlB,gBAVkB,uCAKLU,EAAaI,sBAAsB/B,EAC7CkB,EAAkBC,EAAgBC,EAAcE,EAAmBD,EAAmBE,GANvE,cAKnBO,EALmB,oDAWAH,EAAaK,mBAAmBhC,EAC/CkB,EAAkBC,EAAgBC,GAZnB,eAWba,EAXa,OAcnBH,EAAM3E,KAAK8E,GAdQ,6BAmB3BtD,EAAcuD,UAAU,EAAG,EAAG5B,EAAYC,GAEtCiB,IACA7C,EAAcwD,OACdxD,EAAcC,OAAO,EAAG,GACxBD,EAAcyD,WAAW9B,EAAY,GACrC3B,EAAc0D,UAAUrC,EAAO,EAAG,EAAGM,EAAYC,GACjD5B,EAAc2D,WAGlBR,EAAMjD,SAAQ,YAAyB,IAAvBE,EAAsB,EAAtBA,MAAOP,EAAe,EAAfA,UACfO,EAAQN,IACJgD,GACAlD,EACIC,EACA6C,EACA3C,EACAC,GAIJ+C,GACAnC,EACIf,EACA6C,EACA3C,EACAc,EACAb,OAMhB3C,sBAAsB4F,GApDK,4CAAH,qDAsD5BA,M,wLAKUvB,KAAKS,c,4DAEX5E,QAAQC,IAAR,MACM,IAAIiE,MACN,qF,iCAKiBX,M,QAArBY,KAAKZ,Q,+DAEC,IAAIW,MACN,0B,yBAGJmC,YAAW,WACP,EAAKC,SAAS,CAACC,SAAS,MACzB,K,qBAEPvG,QAAQC,IAAK,4CACbkE,KAAKqC,a,4KAgBL,OACI,oCACI,2BAAOC,GAAG,cAAcC,aAAW,EAACrG,IAAK8D,KAAKN,WAC9C,4BAAQrH,UAAU,SAAS6D,IAAK8D,KAAKT,iB,GA9KhCiD,IAAMC,WAArBpD,EACK5G,aAAe,CAClBwH,WAAY,IACZC,YAAa,IACbY,gBAAgB,EAChBF,UAAW,cACXO,WAAW,EACXE,cAAc,EACdD,YAAY,EACZhD,kBAAmB,GACnB4C,kBAAmB,GACnBC,kBAAmB,EACnBC,UAAW,GACXH,aAAc,GACdF,iBAAkB,GAClBxC,cAAe,UACfc,kBAAmB,EACnBuD,YAAa,iCC5DrB,SAASzE,EAAT,GACE,MAAO,CADgB,EAAPjE,EAAO,EAAJG,GAId,SAAS+D,EACdC,EACAwE,EACAtE,EACAC,GAEC,IADDC,EACA,uDADQ,EAERJ,EAAUK,SAAQ,SAAAC,GAChB,GAAIA,EAASC,OAASiE,EAAe,CAAC,IAAD,EACpBlE,EAASE,SAAjB3E,EAD4B,EAC5BA,EAAGG,EADyB,EACzBA,EACVmE,EAAc/C,YACd+C,EAAc9C,IAAIxB,EAAIuE,EAAOpE,EAAIoE,EApCnB,EAoCuC,EAAG,EAAItE,KAAKwB,IACjE6C,EAAcnD,UAAYkD,EAC1BC,EAAc5C,WAKpB,SAASkD,EAAT,IAGErB,EACAsB,EACAN,EACAD,GACC,IAAD,mBANCQ,EAMD,KANSC,EAMT,wBALCC,EAKD,KALQC,EAKR,KACAX,EAAc/C,YACd+C,EAAcpB,OAAO4B,EAASP,EAAOQ,EAASR,GAC9CD,EAAcnB,OAAO6B,EAAQT,EAAOU,EAAQV,GAC5CD,EAAcO,UAAYA,EAC1BP,EAAcpD,YAAcqC,EAC5Be,EAAclB,SAGT,SAAS8B,EACdf,EACAwE,EACApF,EACAsB,EACAP,GAEC,IADDC,EACA,uDADQ,EAEFqE,EAAoBxD,IACxBjB,EACAwE,GAGFC,EAAkBpE,SAAQ,SAAAL,GACxBS,EACEX,EAAQE,EAAU,GAAGQ,UACrBV,EAAQE,EAAU,GAAGQ,UACrBpB,EACAsB,EACAN,EACAD,M,IC9EAuE,E,kDAoBJ,WAAYvD,GAAQ,IAAD,8BACjB,cAAMA,EAAOuD,EAAQpK,eAGvB8G,UAAY,SAAAC,GACV,EAAKC,OAASD,GALG,EAQnBE,SAAW,SAAAF,GACT,EAAKG,MAAQH,GATI,E,8MAcTQ,KAAKS,c,4DAEL,IAAIV,MACR,sF,iCAKmBX,M,QAArBY,KAAKZ,Q,+DAEC,IAAIW,MAAM,0B,yBAEhBmC,YAAW,WACT,EAAKC,SAAS,CAACC,SAAS,MACvB,K,qBAGLpC,KAAKqC,a,2RAIAzC,UAAUC,cAAiBD,UAAUC,aAAaC,a,sBAC/C,IAAIC,MACR,iE,gBAG8BC,KAAKV,MAAhCW,E,EAAAA,WAAYC,E,EAAAA,aACbP,EAAQK,KAAKL,OACb7G,MAAQmH,EACdN,EAAM5G,OAASmH,E,SAEMN,UAAUC,aAAaC,aAAa,CACvDgD,OAAO,EACPnD,MAAO,CACLQ,WAAY,OACZrH,MAAOmH,EACPlH,OAAQmH,K,cALNE,E,OASNT,EAAMU,UAAYD,E,kBAEX,IAAIE,SAAQ,SAAAC,GACjBZ,EAAMa,iBAAmB,WACvBb,EAAMe,OACNH,EAAQZ,Q,0IAKA,IAAD,EACuBK,KAAKV,MAAhCW,EADI,EACJA,WAAYC,EADR,EACQA,YACbT,EAASO,KAAKP,OACdnB,EAAgBmB,EAAO1E,WAAW,MAExC0E,EAAO3G,MAAQmH,EACfR,EAAO1G,OAASmH,EAEhBF,KAAKW,mBAAmBrC,K,yCAGPA,GAAgB,IAAD,EAiB1B0B,KAAKV,MAfTsB,EAF8B,EAE9BA,UACAC,EAH8B,EAG9BA,iBACAC,EAJ8B,EAI9BA,eACAC,EAL8B,EAK9BA,aACA3C,EAN8B,EAM9BA,kBACA4C,EAP8B,EAO9BA,kBACAC,EAR8B,EAQ9BA,kBACAC,EAT8B,EAS9BA,UACAjB,EAV8B,EAU9BA,WACAC,EAX8B,EAW9BA,YACAiB,EAZ8B,EAY9BA,UACAC,EAb8B,EAa9BA,WACAC,EAd8B,EAc9BA,aACAhD,EAf8B,EAe9BA,cACAc,EAhB8B,EAgB9BA,kBAGImC,EAAetB,KAAKZ,QACpBO,EAAQK,KAAKL,MAEboD,EAAsB,uCAAG,8BAAAvB,EAAA,sDACzBC,EAAQ,GADiB,KAGrBb,EAHqB,OAItB,eAJsB,OAgBtB,gBAhBsB,uCAKXU,EAAaI,sBAC3B/B,EACAkB,EACAC,EACAC,EACAE,EACAD,EACAE,GAZyB,cAKzBO,EALyB,oDAiBNH,EAAaK,mBAChChC,EACAkB,EACAC,EACAC,GArByB,eAiBnBa,EAjBmB,OAuBzBH,EAAM3E,KAAK8E,GAvBc,6BA4B7BtD,EAAcuD,UAAU,EAAG,EAAG5B,EAAYC,GAEtCiB,IACF7C,EAAcwD,OACdxD,EAAcC,OAAO,EAAG,GACxBD,EAAcyD,WAAW9B,EAAY,GACrC3B,EAAc0D,UAAUrC,EAAO,EAAG,EAAGM,EAAYC,GACjD5B,EAAc2D,WAGhBR,EAAMjD,SAAQ,YAAyB,IAAvBE,EAAsB,EAAtBA,MAAOP,EAAe,EAAfA,UACjBO,GAASN,IACPgD,GACFlD,EACEC,EACA6C,EACA3C,EACAC,GAGA+C,GACFnC,EACEf,EACA6C,EACA3C,EACAc,EACAb,OAKR3C,sBAAsBoH,GA3DO,4CAAH,qDA6D5BA,M,+BAIA,OACE,6BACE,6BACE,2BAAOT,GAAG,cAAcC,aAAW,EAACrG,IAAK8D,KAAKN,WAC9C,4BAAQrH,UAAU,SAAS6D,IAAK8D,KAAKT,kB,GA1LzBkD,aAAhBI,EACGpK,aAAe,CACpBwH,WAAY,IACZC,YAAa,IACbY,gBAAgB,EAChBF,UAAW,cACXO,WAAW,EACXE,cAAc,EACdD,YAAY,EACZhD,kBAAmB,GACnB4C,kBAAmB,GACnBC,kBAAmB,EACnBC,UAAW,GACXH,aAAc,GACdF,iBAAkB,GAClBxC,cAAe,UACfc,kBAAmB,EACnBuD,YAAa,kCAgLFG,QCnJAG,MA9Bf,WACI,OACI,oCACA,kBAAC,EAAD,UACA,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAUC,KAAK,SAASzK,GAAG,iBAC3B,kBAAC,IAAD,CAAUyK,KAAK,QAAQzK,GAAG,gBAE1B,kBAAC,IAAD,CAAO0K,OAAK,EAACC,KAAK,IAAIC,UAAW3F,IACjC,kBAAC,IAAD,CAAO0F,KAAK,YAAYC,UAAWzF,IACnC,kBAAC,IAAD,CAAOwF,KAAK,SACRE,OACI,gBAAUC,EAAV,EAAEC,MAAQD,IAAV,OACI,oCACI,kBAAC,IAAD,CAAOH,KAAI,UAAKG,EAAL,KAAaF,UAAW1F,EAAOwF,OAAK,IAC/C,kBAAC,IAAD,CAAOC,KAAI,UAAKG,EAAL,SAAiBF,UAAWxF,EAAMsF,OAAK,IAClD,kBAAC,IAAD,CAAOC,KAAI,UAAKG,EAAL,UAAkBF,UAAWvF,EAAOqF,OAAK,QAKpE,kBAAC,IAAD,CAAOA,OAAK,EAACC,KAAK,UAAUC,UAAWP,IACvC,kBAAC,IAAD,CAAOK,OAAK,EAACC,KAAK,SAASC,UAAWrF,IAC1C,kBAAC,IAAD,CAAOoF,KAAK,IAAIC,UAAWtF,KAE3B,kBAAC,EAAD,QCjCY0F,QACW,cAA7BjK,OAAOkK,SAASC,UAEe,UAA7BnK,OAAOkK,SAASC,UAEhBnK,OAAOkK,SAASC,SAASH,MACvB,2DCVNI,IAASN,OACL,kBAAC,IAAMO,WAAP,KACI,kBAAC,IAAD,CAAQC,SAAU,UACd,kBAAC,EAAD,QAGVC,SAASC,eAAe,SDqHpB,kBAAmBnE,WACrBA,UAAUoE,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLzI,QAAQyI,MAAMA,EAAMC,c","file":"static/js/main.8aa1f7b0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cybereye.466fa6a0.jpg\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/woman-face-forward-view.0dfea5c8.jpg\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport logo from '../../images/cybereye.jpg';\nimport {Link} from 'react-router-dom'\n\nfunction AppHeader({  }) {\n    return (\n        <>\n        <div className=\"d-flex flex-column flex-md-row align-items-center p-3 px-md-4\" style={{backgroundColor: \"#425b76\"}}>\n            <h5 className=\"my-0 mr-md-auto\"> Cyber Eye </h5>\n            <nav className=\"my-2 my-md-0 mr-md-3\">\n                <Link to=\"/\" className=\"p-2\"> Home </Link>\n                <Link to=\"products\" className=\"p-2\"> Product </Link>\n                <Link to=\"about\" className=\"p-2\"> About </Link>\n                <Link to=\"pushup\" className=\"p-2\"> Pushup </Link>\n            </nav>\n        </div>\n        </>\n    );\n}\n\nAppHeader.defaultProps = {};\n\nAppHeader.propTypes = {\n};\n\nexport default AppHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport logo from '../../images/cybereye.jpg';\nimport '../../App.css'\n\nfunction AppFooter({  }) {\n    return (\n        <>\n        <footer className=\"pt-4 my-md-5 pt-md-5 border-light\">\n            <div className=\"row\">\n                <div className=\"col-12 col-md\">\n                    <img src={logo} alt=\"\" style={{width: 40, height: 40, borderRadius: 50}}/> &nbsp;\n                    <small className=\"d-block mb-3 text-muted\">\n                        &copy; 2020\n                    </small>\n                </div>\n\n                <div className=\"col-6 col-md\">\n                    <h5> Products </h5>\n                    <ul className=\"list-unstyled text-small\">\n                        <li><a className=\"text-muted\" href=\"#\"> Face Recorgnisation </a></li>\n                    </ul>\n                    <ul className=\"list-unstyled text-small\">\n                        <li><a className=\"text-muted\" href=\"#\"> Data Story Telling</a></li>\n                    </ul>\n                </div>\n                <div className=\"col-6 col-md\">\n                    <h5> About Us</h5>\n                    <ul className=\"list-unstyled text-small\">\n                        <li><a className=\"text-muted\" href=\"#\"> Contact </a></li>\n                    </ul>\n                    <ul className=\"list-unstyled text-small\">\n                        <li><a className=\"text-muted\" href=\"#\"> Demo </a></li>\n                    </ul>\n                </div>\n            </div>\n        </footer>\n\t\t</>\n    );\n}\n\nAppFooter.defaultProps = {};\n\nAppFooter.propTypes = {\n};\n\nexport default AppFooter;\n","import React, {useState, useRef, useEffect} from 'react';\nimport PropTypes from 'prop-types';\n\nfunction AppCanvas({  }) {\n    const canvasRef = useRef()\n    const [canvasSize, setCanvasSize]  =  useState({width: window.innerWidth, height: 600})\n    const createArray = length => [...Array(length)]\n    const randomStars = createArray(20).map((c, i) => {\n            let x = Math.random() * canvasSize.width\n            let y = Math.random() * canvasSize.height\n            let radius = Math.random() * 3\n            let originRadius = radius\n            return ({ x, y, radius , originRadius })\n        })\n    const [stars, setStars] =  useState(randomStars)\n    const [rAF, setRAF] = useState(null)\n\n    const speed = 150\n    let lastMove = 0\n    const drawStars = (t) => {\n        if ((t - lastMove) > speed) {\n            const canvasObj = canvasRef.current\n            const ctx = canvasObj.getContext('2d')\n            const {width: w, height: h} = canvasObj\n\n            ctx.strokeStyle = \"balck\"\n            ctx.fillStyle= \"#425b76\"\n            ctx.fillRect(0, 0, w, h)\n\n            ctx.fillStyle= \"white\"\n            for (let star of stars) {\n                star.x += Math.random() * (Math.floor(Math.random() * 2) ? 1 : -1)\n                star.x %= canvasSize.width\n                star.y += Math.random() \n                star.y %= canvasSize.height\n                let {x, y, radius} = star\n                ctx.beginPath()\n                ctx.arc(x, y, radius, 0, Math.PI * 2, false)\n                ctx.fill()\n            }\n\n            lastMove = t\n        }\n        setRAF(requestAnimationFrame(drawStars))\n    }\n\n    const mouseOverCanvas = (e) => {\n        let mouseX = e.clientX\n        let mouseY = e.clientY\n        const closeStar = []\n        for (let star of stars) {\n            let {x, y} = star\n            const xDist = mouseX - x\n            const yDist = mouseY - y\n            const distanceToMouse = Math.sqrt(xDist * xDist + yDist * yDist)\n            star.radius = (distanceToMouse < 100) ? 3 : star.originRadius\n            if (distanceToMouse < 100) {\n                closeStar.push(star)\n            }\n        }\n        const canvasObj = canvasRef.current\n        const ctx = canvasObj.getContext('2d')\n        //ctx.strokeStyle= \"white\"\n        for (let i = 0; i < closeStar.length; i ++) {\n            const j = Math.floor(Math.random() * closeStar.length)\n            const s1 = closeStar[i]\n            const s2 = closeStar[j]\n\n            ctx.beginPath()\n            ctx.moveTo(s1.x, s1.y)\n            ctx.lineTo(s2.x, s2.y)\n            ctx.stroke()\n        }\n\n    }\n\n\n    useEffect(() => {\n        console.log( 'use effect' )\n        setRAF(requestAnimationFrame(drawStars))\n        return () => {\n            console.log( 'cancel raf' )\n            cancelAnimationFrame(rAF)\n        }\n    }, [stars])\n\n    useEffect(() => {\n        function handleResize() {\n            console.log( 'onReize' )\n            setCanvasSize({width: window.innerWidth, height: 600 })\n        }\n        // window.addEventListener('resize', handleResize)\n\n        return () => {\n            window.removeEventListener('resize', handleResize)\n        }\n    })\n\n    return (\n        <div className=\"row\">\n            <canvas \n                ref={canvasRef}\n                width={canvasSize.width}\n                height={canvasSize.height}\n                onMouseMove={mouseOverCanvas}\n            />\n        </div>\n    );\n}\n\nAppCanvas.defaultProps = {};\n\nAppCanvas.propTypes = {\n};\n\nexport default AppCanvas;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n//import logo from '../../images/face-recognition.jpg'\nimport logo from '../../images/woman-face-forward-view.jpg'\nimport { FaEye, FaKey, FaFingerprint, FaWallet,\n    FaWindows, FaLinux, FaDatabase, FaCloud, FaMicrochip, FaMapMarkedAlt,\n    FaPython, FaJs,\n    FaUserShield,\n    FaMask\n} from 'react-icons/fa'\nimport '../../App.css'\n\nfunction AppDemo01({  }) {\n    return (\n        <>\n        <div className=\"row pt-3\">\n            <div className=\"text-center border-0\">\n                <div className=\"card flex-row border-0\">\n                    <div>\n                        <FaMask size={250} />\n                    </div>\n                    <div className=\"card-body px-2\">\n                        <h4 className=\"card-title\"> Face Recognition </h4>\n                        <p className=\"card-text\">\n                            A facial recognition system is a technology capable of identifying or verifying a person from a digital image or a video frame from a video source. There are multiple methods in which facial recognition systems work, but in general, they work by comparing selected facial features from given image with faces within a database. It is also described as a Biometric Artificial Intelligence based application that can uniquely identify a person by analyzing patterns based on the person's facial textures and shape.\n                        </p>\n                        <a href=\"#\" className=\"btn btn-primary\"> See More </a>\n                    </div>\n                </div>\n            </div>\n        </div>\n        \n        <div className=\"row pt-3\">\n            <div className=\"col pt-2 border-light d-flex\">\n                <div className=\"card border-0\">\n                    <FaEye size={50} color=\"#007aFF\" className=\"card-img-top\"/>\n                    <div className=\"card-body text-center\">\n                        <h4 className=\"card-title\"> Security </h4>\n                        <p className=\"card-text\"> Use AI computer visiion to augment survellance and foorensic review with suspect indentification</p>\n                    </div>\n                </div>\n            </div>\n\n            <div className=\"col pt-2\">\n                <div className=\"card border-0\">\n                    <FaKey size={50} color=\"#007aFF\"  className=\"card-img-top\"/>\n                    <div className=\"card-body text-center\">\n                        <h4 className=\"card-title\"> Access Control </h4>\n                        <p className=\"card-text\"> Use AI computer visiion to augment survellance and foorensic review with suspect indentification</p>\n                    </div>\n                </div>\n            </div>\n            \n            <div className=\"col pt-2\">\n                <div className=\"card border-0\">\n                    <FaFingerprint size={50} color=\"#007aFF\"  className=\"card-img-top\"/>\n                    <div className=\"card-body text-center\">\n                        <h4 className=\"card-title\"> Identity </h4>\n                        <p className=\"card-text\"> Use AI computer visiion to augment survellance and foorensic review with suspect indentification</p>\n                    </div>\n                </div>\n            </div>\n\n            <div className=\"col pt-2\">\n                <div className=\"card border-0\">\n                    <FaWallet size={50} color=\"#007aFF\"  className=\"card-img-top\"/>\n                    <div className=\"card-body text-center\">\n                        <h4 className=\"card-title\"> Payment </h4>\n                        <p className=\"card-text\"> Use AI computer visiion to augment survellance and foorensic review with suspect indentification</p>\n                    </div>\n                </div>\n\n            </div>\n        </div>\n\n        <div className=\"row pt-5\">\n            <div className=\"col jumbotron text-center\"> \n                <h1> Cross Platform Support </h1>\n                <p>\n                    Fast and easy to deploy in any virtual environment\n                    Fast and easy to deploy in any virtual environment\n                </p>\n            </div>\n        </div>\n        <div className=\"row\">\n            <div className=\"col text-center\">\n                <div className=\"row text-center\">\n                    <div className=\"text-center\">\n                        Operating Systems\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-6\">\n                        <FaWindows size={20}/> <br />\n                        Windows\n                    </div>\n                    <div className=\"col-6\">\n                        <FaLinux size={20}/> <br />\n                        Linux\n                    </div>\n                </div>\n            </div>\n            <div className=\"col\">\n                <div className=\"row\"> Deployment Options</div>\n                <div className=\"row\">\n                    <div className=\"col\"> \n                        <FaDatabase size={20} /> <br />\n                        On Premise \n                    </div>\n                    <div className=\"col\"> \n                        <FaCloud size={20} /> <br />\n                        Cloud/Hybrid\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col\"> \n                        <FaMicrochip size={20} /> <br />\n                        Edge Device\n                    </div>\n                    <div className=\"col\"> \n                        <FaMapMarkedAlt size={20} /> <br />\n                        Offline \n                    </div>\n                </div>\n            </div>\n            <div className=\"col\">\n                <div className=\"row\">Chipsets</div>\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <FaMicrochip size={20} color=\"blue\" /> <br />\n                        Intel\n                    </div>\n                    <div className=\"col\">\n                        <FaMicrochip size={20} /> <br />\n                        Nvidia \n                    </div>\n                </div>\n            </div>\n            <div className=\"col\">\n                <div className=\"row\">Languages</div>\n                <div className=\"row\">\n                    <div className=\"col\"> \n                        <FaPython size={20} /> <br />\n                        Python \n                    </div>\n                    <div className=\"col\"> \n                        <FaJs size={20} /> <br />\n                        Javascript\n                    </div>\n                </div>\n            </div>\n        </div>\n        </>\n    );\n}\n\nAppDemo01.defaultProps = {};\n\nAppDemo01.propTypes = {\n};\n\nexport default AppDemo01;\n\n\n// <div className=\"card\" style={{width: \"18rem\"}}>\n// <img className=\"card-img-top\" src={logo} alt=\"Card image cap\"/>\n//     <div className=\"card-body\">\n//         <h5 className=\"card-title\">Card title</h5>\n//         <p className=\"card-text\">Some quick example text to build on the card title and make up the bulk of the card's content.</p>\n//         <a href=\"#\" className=\"btn btn-primary\">Go somewhere</a>\n//     </div>\n// </div>\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction AppDemo02({  }) {\n    return (\n        <div className=\"row\">\n            App Demo 02\n        </div>\n    );\n}\n\nAppDemo02.defaultProps = {};\n\nAppDemo02.propTypes = {\n};\n\nexport default AppDemo02;\n","import React from 'react'\n\nimport AppCanvas from '../components/app/AppCanvas';\nimport AppDemo01 from '../components/app/AppDemo01';\nimport AppDemo02 from '../components/app/AppDemo02';\n\nexport function Home() {\n    return (\n        <>\n        <AppCanvas> </AppCanvas> \n        <div className=\"container\">\n                <AppDemo01>\n                </AppDemo01>\n        </div>\n\t\t</>\n    )\n}\n\n\nexport function About() {\n    return (\n        <div className=\"container\">\n            <h1>\n                [About]\n            </h1>\n        </div>\n    )\n}\n\nexport function Products() {\n    return (\n        <div className=\"container\">\n            <h1>\n                [Products]\n            </h1>\n        </div>\n    )\n}\n\n\nexport function News() {\n    return (\n        <div className=\"container\">\n            <h1>\n                [News]\n            </h1>\n        </div>\n    )\n}\n\nexport function Demos() {\n    return (\n        <>\n\t\n        </>\n    )\n}\n\nexport function Whoop404() {\n    return (\n        <div className=\"container\">\n            <h1>\n                [Whoop404]\n            </h1>\n        </div>\n    )\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Admin.css';\n\nfunction Admin({  }) {\n    return (\n        <>\n        </>\n    );\n}\n\nAdmin.defaultProps = {};\n\nAdmin.propTypes = {\n};\n\nexport default Admin;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport * as posenet from '@tensorflow-models/posenet'\nimport '../App.css'\n\nconst videoWidth = 900\nconst videoHeight = 700\nconst pointRadius = 3\n\nfunction toTuple({x, y}) {\n    return [x, y]\n}\n\nfunction drawKeyPoints (\n    keypoints,\n    minPoseConfidence,\n    skeletonColor,\n    canvasContext,\n    scale=1\n) {\n    keypoints.forEach(keypoint => {\n        if (keypoint.score >= minPoseConfidence) {\n            const {x, y} = keypoint.position\n            canvasContext.beginPath()\n            canvasContext.arc( x * scale, y*scale, pointRadius, 0, 2 * Math.PI )\n            canvasContext.fillStyle = skeletonColor\n            canvasContext.fill()\n        }\n    })\n}\n\nfunction drawSegment (\n    [firstX, firstY],\n    [nextX, nextY],\n    color,\n    lineWidth,\n    scale,\n    canvasContext\n) {\n    canvasContext.beginPath()\n    canvasContext.moveTo(firstX * scale, firstY * scale)\n    canvasContext.lineTo(nextX * scale, nextY * scale)\n    canvasContext.lineWidth = lineWidth\n    canvasContext.strokeStyle = color\n    canvasContext.stroke()\n}\n\nfunction drawSkeleton (\n    keypoints,\n    minPoseConfidence,\n    skeletonColor,\n    skeletonLineWidth,\n    canvasContext,\n    scale=1\n) {\n    const adjacentKeyPoints = posenet.getAdjacentKeyPoints( keypoints, minPoseConfidence)\n    drawSegment(\n        toTuple(keypoints[0].position),\n        toTuple(keypoints[1].position),\n        skeletonColor,\n        skeletonLineWidth,\n        scale,\n        canvasContext\n    )\n}\n\n\nclass Pushup extends React.Component {\n    static defaultProps = {\n        videoWidth: 900,\n        videoHeight: 700,\n        flipHorizontal: true,\n        algorithm: 'single-pose',\n        showVideo: true,\n        showSkeleton: true,\n        showPoints: true,\n        minPoseConfidence: 0.1,\n        minPartConfidence: 0.5,\n        maxPoseDetections: 2,\n        nmsRadius: 20,\n        outputStride: 16,\n        imageScaleFactor: 0.5,\n        skeletonColor: '#ffadea',\n        skeletonLineWidth: 6,\n        loadingText: 'loading .... please wait ....'\n    }\n\n    async setupCamera() {\n        if (!navigator.mediaDevices | !navigator.mediaDevices.getUserMedia) {\n            throw new Error (\n                'Browser API navigator.mediaDevices.getUserMedia not available'\n            )\n        }\n        console.log( this.props )\n        const {videoWidth, videoHeight} = this.props\n        const video = this.video\n        video.width = videoWidth\n        video.height = videoHeight\n\n        const stream = await navigator.mediaDevices.getUserMedia({\n            'audio': false,\n            'video': {\n                facingMode: 'user',\n                width: videoWidth,\n                height: videoHeight\n            }\n        })\n        video.srcObject = stream\n\n        return new Promise((resolve) => {\n            video.onloadedmetadata = () => {\n                resolve(video)\n            }\n        })\n    }\n\n    async loadVideo() {\n        const video = await this.setupCamera()\n        video.play()\n\n        return video\n    }\n\n    detectPose() {\n        const {videoWidth, videoHeight} = this.props\n        const canvas = this.canvas\n        const canvasContext = canvas.getContext('2d')\n\n        canvas.width = videoWidth\n        canvas.height = videoHeight\n\n        this.poseDetectionFrame(canvasContext)\n    }\n\n    poseDetectionFrame(canvasContext) {\n        const {\n            algorithm, imageScaleFactor, flipHorizontal, outputStride, minPoseConfidence, minPartConfidence, maxPoseDetections, nmsRadius, \n            videoWidth, videoHeight, showVideo, showPoints, showSkeleton, skeletonColor, skeletonLineWidth\n        } = this.props\n\n        const posenetModel = this.posenet\n        const video = this.video\n\n        const findPoseDerectionFrame = async () => {\n            let poses = []\n\n            switch (algorithm) {\n                case 'multi-pose': {\n                    poses = await posenetModel.estimateMultiplePoses(video,\n                        imageScaleFactor, flipHorizontal, outputStride, maxPoseDetections, minPartConfidence, nmsRadius\n                    )\n                    break\n                }\n                case 'single-pose': {\n                    const pose = await posenetModel.estimateSinglePose(video,\n                        imageScaleFactor, flipHorizontal, outputStride\n                    )\n                    poses.push(pose)\n                    break\n                }\n            }\n\n            canvasContext.clearRect(0, 0, videoWidth, videoHeight)\n\n            if (showVideo) {\n                canvasContext.save()\n                canvasContext.scale(-1, 1)\n                canvasContext.translate(-videoWidth, 0)\n                canvasContext.drawImage(video, 0, 0, videoWidth, videoHeight)\n                canvasContext.restore()\n            }\n\n            poses.forEach(({score, keypoints}) => {\n                if (score > minPoseConfidence) {\n                    if (showPoints) {\n                        drawKeyPoints(\n                            keypoints,\n                            minPartConfidence,\n                            skeletonColor,\n                            canvasContext\n                        )\n                    }\n\n                    if (showSkeleton) {\n                        drawSkeleton(\n                            keypoints,\n                            minPartConfidence,\n                            skeletonColor,\n                            skeletonLineWidth,\n                            canvasContext\n                        )\n                    }\n                }\n            })\n\n            requestAnimationFrame(findPoseDerectionFrame)\n        }\n        findPoseDerectionFrame()\n    }\n\n    async componentDidMount() {\n        try {\n            await this.setupCamera()\n        } catch (err) {\n            console.log( err  )\n            throw new Error( \n                'This browser does not support video capture, or this video does not have a camera'\n            )\n        }\n\n        try {\n            this.posenet = await posenet.load()\n        } catch (error) {\n            throw new Error (\n                'posenet failed to load'\n            )\n        } finally {\n            setTimeout(() => {\n                this.setState({loading: false})\n            }, 200)\n        }\n        console.log( 'doneeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee' )\n        this.detectPose()\n    }\n\n    constructor(props) {\n        super(props, Pushup.defaultProps)\n    }\n    \n    getCanvas = elem => {\n        this.canvas = elem\n    }\n\n    getVideo = elem => {\n        this.video = elem\n    }\n\n    render() {\n        return (\n            <>\n                <video id=\"videoNoShow\" playsInline ref={this.getVideo} />\n                <canvas className=\"webcam\" ref={this.getCanvas} />\n            </>\n        )\n    }\n}\n\nexport default Pushup;\n","\nimport * as posenet from '@tensorflow-models/posenet'\n\nconst pointRadius = 3\n\nexport const config = {\n  videoWidth: 900,\n  videoHeight: 700,\n  flipHorizontal: true,\n  algorithm: 'single-pose',\n  showVideo: true,\n  showSkeleton: true,\n  showPoints: true,\n  minPoseConfidence: 0.1,\n  minPartConfidence: 0.5,\n  maxPoseDetections: 2,\n  nmsRadius: 20,\n  outputStride: 16,\n  imageScaleFactor: 0.5,\n  skeletonColor: '#ffadea',\n  skeletonLineWidth: 6,\n  loadingText: 'Loading...please be patient...'\n}\n\nfunction toTuple({x, y}) {\n  return [x, y]\n}\n\nexport function drawKeyPoints(\n  keypoints,\n  minConfidence,\n  skeletonColor,\n  canvasContext,\n  scale = 1\n) {\n  keypoints.forEach(keypoint => {\n    if (keypoint.score >= minConfidence) {\n      const {x, y} = keypoint.position\n      canvasContext.beginPath()\n      canvasContext.arc(x * scale, y * scale, pointRadius, 0, 2 * Math.PI)\n      canvasContext.fillStyle = skeletonColor\n      canvasContext.fill()\n    }\n  })\n}\n\nfunction drawSegment(\n  [firstX, firstY],\n  [nextX, nextY],\n  color,\n  lineWidth,\n  scale,\n  canvasContext\n) {\n  canvasContext.beginPath()\n  canvasContext.moveTo(firstX * scale, firstY * scale)\n  canvasContext.lineTo(nextX * scale, nextY * scale)\n  canvasContext.lineWidth = lineWidth\n  canvasContext.strokeStyle = color\n  canvasContext.stroke()\n}\n\nexport function drawSkeleton(\n  keypoints,\n  minConfidence,\n  color,\n  lineWidth,\n  canvasContext,\n  scale = 1\n) {\n  const adjacentKeyPoints = posenet.getAdjacentKeyPoints(\n    keypoints,\n    minConfidence\n  )\n\n  adjacentKeyPoints.forEach(keypoints => {\n    drawSegment(\n      toTuple(keypoints[0].position),\n      toTuple(keypoints[1].position),\n      color,\n      lineWidth,\n      scale,\n      canvasContext\n    )\n  })\n}\n","import {drawKeyPoints, drawSkeleton} from './utils'\nimport React, {Component} from 'react'\nimport * as posenet from '@tensorflow-models/posenet'\n\nclass PoseNet extends Component {\n  static defaultProps = {\n    videoWidth: 900,\n    videoHeight: 700,\n    flipHorizontal: true,\n    algorithm: 'single-pose',\n    showVideo: true,\n    showSkeleton: true,\n    showPoints: true,\n    minPoseConfidence: 0.1,\n    minPartConfidence: 0.5,\n    maxPoseDetections: 2,\n    nmsRadius: 20,\n    outputStride: 16,\n    imageScaleFactor: 0.5,\n    skeletonColor: '#ffadea',\n    skeletonLineWidth: 6,\n    loadingText: 'Loading...please be patient...'\n  }\n\n  constructor(props) {\n    super(props, PoseNet.defaultProps)\n  }\n\n  getCanvas = elem => {\n    this.canvas = elem\n  }\n\n  getVideo = elem => {\n    this.video = elem\n  }\n\n  async componentDidMount() {\n    try {\n      await this.setupCamera()\n    } catch (error) {\n      throw new Error(\n        'This browser does not support video capture, or this device does not have a camera'\n      )\n    }\n\n    try {\n      this.posenet = await posenet.load()\n    } catch (error) {\n      throw new Error('PoseNet failed to load')\n    } finally {\n      setTimeout(() => {\n        this.setState({loading: false})\n      }, 200)\n    }\n\n    this.detectPose()\n  }\n\n  async setupCamera() {\n    if (!navigator.mediaDevices || !navigator.mediaDevices.getUserMedia) {\n      throw new Error(\n        'Browser API navigator.mediaDevices.getUserMedia not available'\n      )\n    }\n    const {videoWidth, videoHeight} = this.props\n    const video = this.video\n    video.width = videoWidth\n    video.height = videoHeight\n\n    const stream = await navigator.mediaDevices.getUserMedia({\n      audio: false,\n      video: {\n        facingMode: 'user',\n        width: videoWidth,\n        height: videoHeight\n      }\n    })\n\n    video.srcObject = stream\n\n    return new Promise(resolve => {\n      video.onloadedmetadata = () => {\n        video.play()\n        resolve(video)\n      }\n    })\n  }\n\n  detectPose() {\n    const {videoWidth, videoHeight} = this.props\n    const canvas = this.canvas\n    const canvasContext = canvas.getContext('2d')\n\n    canvas.width = videoWidth\n    canvas.height = videoHeight\n\n    this.poseDetectionFrame(canvasContext)\n  }\n\n  poseDetectionFrame(canvasContext) {\n    const {\n      algorithm,\n      imageScaleFactor, \n      flipHorizontal, \n      outputStride, \n      minPoseConfidence, \n      minPartConfidence, \n      maxPoseDetections, \n      nmsRadius, \n      videoWidth, \n      videoHeight, \n      showVideo, \n      showPoints, \n      showSkeleton, \n      skeletonColor, \n      skeletonLineWidth \n      } = this.props\n\n    const posenetModel = this.posenet\n    const video = this.video\n\n    const findPoseDetectionFrame = async () => {\n      let poses = []\n\n      switch (algorithm) {\n        case 'multi-pose': {\n          poses = await posenetModel.estimateMultiplePoses(\n          video, \n          imageScaleFactor, \n          flipHorizontal, \n          outputStride, \n          maxPoseDetections, \n          minPartConfidence, \n          nmsRadius\n          )\n          break\n        }\n        case 'single-pose': {\n          const pose = await posenetModel.estimateSinglePose(\n          video, \n          imageScaleFactor, \n          flipHorizontal, \n          outputStride\n          )\n          poses.push(pose)\n          break\n        }\n      }\n\n      canvasContext.clearRect(0, 0, videoWidth, videoHeight)\n\n      if (showVideo) {\n        canvasContext.save()\n        canvasContext.scale(-1, 1)\n        canvasContext.translate(-videoWidth, 0)\n        canvasContext.drawImage(video, 0, 0, videoWidth, videoHeight)\n        canvasContext.restore()\n      }\n\n      poses.forEach(({score, keypoints}) => {\n        if (score >= minPoseConfidence) {\n          if (showPoints) {\n            drawKeyPoints(\n              keypoints,\n              minPartConfidence,\n              skeletonColor,\n              canvasContext\n            )\n          }\n          if (showSkeleton) {\n            drawSkeleton(\n              keypoints,\n              minPartConfidence,\n              skeletonColor,\n              skeletonLineWidth,\n              canvasContext\n            )\n          }\n        }\n      })\n      requestAnimationFrame(findPoseDetectionFrame)\n    }\n    findPoseDetectionFrame()\n  }\n\n  render() {\n    return (\n      <div>\n        <div>\n          <video id=\"videoNoShow\" playsInline ref={this.getVideo} />\n          <canvas className=\"webcam\" ref={this.getCanvas} />\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default PoseNet\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport AppHeader from './components/app/AppHeader';\nimport AppFooter from './components/app/AppFooter';\nimport {\n    Home,\n    Products,\n    About,\n    News,\n    Demos,\n    Whoop404\n} from './pages/pages.js'\nimport {Switch, Route, Redirect} from 'react-router-dom'\n\nimport Admin from './pages/admin/Admin'\nimport Pushup from './pages/Pushup'\nimport PoseNet from './pages/PoseNet'\n\nfunction App() {\n    return (\n        <>\n        <AppHeader> </AppHeader>\n        <Switch>\n            <Redirect from=\"/demos\" to=\"/about/demos\" />\n            <Redirect from=\"/news\" to=\"/about/news\" />\n\n            <Route exact path=\"/\" component={Home}/> \n            <Route path=\"/products\" component={Products}/>\n            <Route path=\"/about\"\n                render={\n                    ({match: {url}}) => (\n                        <>\n                            <Route path={`${url}/`} component={About} exact/>\n                            <Route path={`${url}/news`} component={News} exact/>\n                            <Route path={`${url}/demos`} component={Demos} exact/>\n                        </>\n                    )\n                }\n            />\n            <Route exact path=\"/pushup\" component={PoseNet}/> \n            <Route exact path=\"/admin\" component={Admin}/> \n        <Route path=\"*\" component={Whoop404}/>\n        </Switch>\n        <AppFooter />\n        </>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter as Router} from 'react-router-dom'\n\nReactDOM.render(\n    <React.StrictMode>\n        <Router basename={'/build'}>\n            <App />\n        </Router>\n    </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}