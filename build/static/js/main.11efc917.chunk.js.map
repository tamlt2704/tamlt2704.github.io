{"version":3,"sources":["images/cybereye.jpg","images/face-recognition.jpg","logo.svg","components/app/AppHeader.js","components/app/AppCanvas.js","components/app/AppFooter.js","components/app/AppDemo01.js","components/app/AppDemo02.js","components/app/AppBanner.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","AppHeader","className","style","backgroundColor","src","logo","alt","width","height","borderRadius","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","defaultProps","AppCanvas","length","canvasRef","useRef","useState","window","innerWidth","canvasSize","setCanvasSize","randomStars","Array","map","c","i","x","Math","random","y","radius","originRadius","stars","rAF","setRAF","lastMove","drawStars","t","canvasObj","current","ctx","getContext","w","h","strokeStyle","fillStyle","fillRect","star","floor","beginPath","arc","PI","fill","requestAnimationFrame","useEffect","console","log","cancelAnimationFrame","handleResize","removeEventListener","ref","onMouseMove","e","mouseX","clientX","mouseY","clientY","closeStar","xDist","yDist","distanceToMouse","sqrt","push","j","s1","s2","moveTo","lineTo","stroke","AppFooter","AppDemo01","class","AppDemo02","AppBanner","role","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.11efc917.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cybereye.466fa6a0.jpg\";","module.exports = __webpack_public_path__ + \"static/media/face-recognition.34bd6591.jpg\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport logo from '../../images/cybereye.jpg';\n\nfunction AppHeader({  }) {\n    return (\n        <>\n            <nav className=\"navbar navbar-expand-lg navbar-light navbar-dark\" style={{backgroundColor: \"#425b76\"}}>\n                <img src={logo} alt=\"\" style={{width: 40, height: 40, borderRadius: 50}}/> &nbsp;\n                <a className=\"navbar-brand\" href=\"#\">cyber eye</a>\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                <span className=\"navbar-toggler-icon\"></span>\n            </button>\n            <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n                <ul className=\"navbar-nav ml-auto\">\n                    <li className=\"nav-item active\">\n                        <a className=\"nav-link\" href=\"#\">Home <span className=\"sr-only\">(current)</span></a>\n                    </li>\n                    <li className=\"nav-item\">\n                        <a className=\"nav-link\" href=\"#\">Products</a>\n                    </li>\n                    <li className=\"nav-item\">\n                        <a className=\"nav-link\" href=\"#\">About Us</a>\n                    </li>\n                    <li className=\"nav-item\">\n                        <a className=\"nav-link\" href=\"#\">Get in touch</a>\n                    </li>\n                </ul>\n            </div>\n        </nav>\n        </>\n    );\n}\n\nAppHeader.defaultProps = {};\n\nAppHeader.propTypes = {\n};\n\nexport default AppHeader;\n","import React, {useState, useRef, useEffect} from 'react';\nimport PropTypes from 'prop-types';\n\nfunction AppCanvas({  }) {\n    const canvasRef = useRef()\n    const [canvasSize, setCanvasSize]  =  useState({width: window.innerWidth, height: 600})\n    const createArray = length => [...Array(length)]\n    const randomStars = createArray(20).map((c, i) => {\n            let x = Math.random() * canvasSize.width\n            let y = Math.random() * canvasSize.height\n            let radius = Math.random() * 3\n            let originRadius = radius\n            return ({ x, y, radius , originRadius })\n        })\n    const [stars, setStars] =  useState(randomStars)\n    const [rAF, setRAF] = useState(null)\n\n    const speed = 150\n    let lastMove = 0\n    const drawStars = (t) => {\n        if ((t - lastMove) > speed) {\n            const canvasObj = canvasRef.current\n            const ctx = canvasObj.getContext('2d')\n            const {width: w, height: h} = canvasObj\n\n            ctx.strokeStyle = \"balck\"\n            ctx.fillStyle= \"#425b76\"\n            ctx.fillRect(0, 0, w, h)\n\n            ctx.fillStyle= \"white\"\n            for (let star of stars) {\n                star.x += Math.random() * (Math.floor(Math.random() * 2) ? 1 : -1)\n                star.x %= canvasSize.width\n                star.y += Math.random() \n                star.y %= canvasSize.height\n                let {x, y, radius} = star\n                ctx.beginPath()\n                ctx.arc(x, y, radius, 0, Math.PI * 2, false)\n                ctx.fill()\n            }\n\n            lastMove = t\n        }\n        setRAF(requestAnimationFrame(drawStars))\n    }\n\n    const mouseOverCanvas = (e) => {\n        let mouseX = e.clientX\n        let mouseY = e.clientY\n        const closeStar = []\n        for (let star of stars) {\n            let {x, y} = star\n            const xDist = mouseX - x\n            const yDist = mouseY - y\n            const distanceToMouse = Math.sqrt(xDist * xDist + yDist * yDist)\n            star.radius = (distanceToMouse < 100) ? 3 : star.originRadius\n            if (distanceToMouse < 100) {\n                closeStar.push(star)\n            }\n        }\n        const canvasObj = canvasRef.current\n        const ctx = canvasObj.getContext('2d')\n        //ctx.strokeStyle= \"white\"\n        for (let i = 0; i < closeStar.length; i ++) {\n            const j = Math.floor(Math.random() * closeStar.length)\n            const s1 = closeStar[i]\n            const s2 = closeStar[j]\n\n            ctx.beginPath()\n            ctx.moveTo(s1.x, s1.y)\n            ctx.lineTo(s2.x, s2.y)\n            ctx.stroke()\n        }\n\n    }\n\n\n    useEffect(() => {\n        console.log( 'use effect' )\n        setRAF(requestAnimationFrame(drawStars))\n        return () => {\n            console.log( 'cancel raf' )\n            cancelAnimationFrame(rAF)\n        }\n    }, [stars])\n\n    useEffect(() => {\n        function handleResize() {\n            console.log( 'onReize' )\n            setCanvasSize({width: window.innerWidth, height: 600 })\n        }\n        // window.addEventListener('resize', handleResize)\n\n        return () => {\n            window.removeEventListener('resize', handleResize)\n        }\n    })\n\n    return (\n        <div className=\"row\">\n            <canvas \n                ref={canvasRef}\n                width={canvasSize.width}\n                height={canvasSize.height}\n                onMouseMove={mouseOverCanvas}\n            />\n        </div>\n    );\n}\n\nAppCanvas.defaultProps = {};\n\nAppCanvas.propTypes = {\n};\n\nexport default AppCanvas;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport logo from '../../images/cybereye.jpg';\nimport '../../App.css'\n\nfunction AppFooter({  }) {\n    return (\n        <div className=\"row footer\" style={{backgroundColor: \"#f4f4f4\"}}>\n            <div className=\"col\"> \n                <h2>\n                    <img src={logo} alt=\"\" style={{width: 40, height: 40, borderRadius: 50}}/> &nbsp;\n                    Cyber Eye\n                </h2>\n            </div>\n            <div className=\"col\"> \n                <h3>\n                    Products \n                </h3>\n                <p>\n                    Face Recognition\n                </p>\n            </div>\n            <div className=\"col\"> \n                <h3>\n                    About Us\n                </h3>\n                <p>\n                    News\n                </p>\n                <p>\n                    Contact\n                </p>\n            </div>\n        </div>\n    );\n}\n\nAppFooter.defaultProps = {};\n\nAppFooter.propTypes = {\n};\n\nexport default AppFooter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport logo from '../../images/face-recognition.jpg'\n\nfunction AppDemo01({  }) {\n    return (\n        <div className=\"row\">\n            <div className=\"card\" style={{width: \"18rem\"}}>\n            <img class=\"card-img-top\" src={logo} alt=\"Card image cap\"/>\n                <div className=\"card-body\">\n                    <h5 className=\"card-title\">Card title</h5>\n                    <p className=\"card-text\">Some quick example text to build on the card title and make up the bulk of the card's content.</p>\n                    <a href=\"#\" className=\"btn btn-primary\">Go somewhere</a>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nAppDemo01.defaultProps = {};\n\nAppDemo01.propTypes = {\n};\n\nexport default AppDemo01;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction AppDemo02({  }) {\n    return (\n        <div className=\"row\">\n            App Demo 02\n        </div>\n    );\n}\n\nAppDemo02.defaultProps = {};\n\nAppDemo02.propTypes = {\n};\n\nexport default AppDemo02;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction AppBanner({  }) {\n    return (\n        <div class=\"jumbotron jumbotron-fluid\" style={{backgroundColor: \"#425b76\"}}>\n            <h1 class=\"display-4\">Hello, world!</h1>\n            <p class=\"lead\">This is a simple hero unit, a simple jumbotron-style component for calling extra attention to featured content or information.</p>\n            <hr class=\"my-4\"/>\n                <p>It uses utility classes for typography and spacing to space content out within the larger container.</p>\n                <p class=\"lead\">\n                    <a class=\"btn btn-primary btn-lg\" href=\"#\" role=\"button\">Learn more</a>\n                </p>\n        </div>\n    );\n}\n\nAppBanner.defaultProps = {};\n\nAppBanner.propTypes = {\n};\n\nexport default AppBanner;\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport AppHeader from './components/app/AppHeader';\nimport AppCanvas from './components/app/AppCanvas';\nimport AppFooter from './components/app/AppFooter';\nimport AppDemo01 from './components/app/AppDemo01';\nimport AppDemo02 from './components/app/AppDemo02';\nimport AppBanner from './components/app/AppBanner';\n\nfunction App() {\n    return (\n        <>\n        <AppHeader> \n        </AppHeader>\n        <div className=\"container-fluid\">\n                <AppCanvas> </AppCanvas> \n                <AppDemo01>\n                </AppDemo01>\n\n                <AppDemo02>\n                </AppDemo02>\n\n                <AppFooter>\n                </AppFooter>\n            </div>\n        </>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}