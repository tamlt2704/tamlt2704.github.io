<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="assets/xml/rss.xsl" media="all"?><rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/"><channel><title>life is for learning</title><link>http://tamlt2704.github.io/</link><description>life is learning</description><atom:link href="http://tamlt2704.github.io/rss.xml" type="application/rss+xml" rel="self"></atom:link><language>en</language><copyright>Contents Â© 2018 &lt;a href="mailto:tamlt2704@gmail.com"&gt;petit vietnam&lt;/a&gt; </copyright><lastBuildDate>Sat, 31 Mar 2018 10:40:46 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>python functiontools</title><link>http://tamlt2704.github.io/posts/python-functiontools/</link><dc:creator>petit vietnam</dc:creator><description>&lt;div&gt;&lt;p&gt;python functiontools provides bunch of usefull tools to work with functions. In this post I will introduce some application of this module to make our life easier.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1. wrap function&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Example if I want a program to read a file that contains multiple numbers, print True or Fasle if it is a prime number or not&lt;/p&gt;
&lt;p&gt;It can be easily implementation as bellow:&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://tamlt2704.github.io/code/functool_wrap_ex1.py.html"&gt;functool_wrap_ex1.py&lt;/a&gt;  &lt;a class="reference external" href="http://tamlt2704.github.io/code/functool_wrap_ex1.py"&gt;(Source)&lt;/a&gt;&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_cc20194a6f41458f926ccc2725230c56-1"&gt;&lt;/a&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;sys&lt;/span&gt;
&lt;a name="rest_code_cc20194a6f41458f926ccc2725230c56-2"&gt;&lt;/a&gt;
&lt;a name="rest_code_cc20194a6f41458f926ccc2725230c56-3"&gt;&lt;/a&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;is_prime_number&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_cc20194a6f41458f926ccc2725230c56-4"&gt;&lt;/a&gt;        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;any&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)]):&lt;/span&gt;
&lt;a name="rest_code_cc20194a6f41458f926ccc2725230c56-5"&gt;&lt;/a&gt;                &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;
&lt;a name="rest_code_cc20194a6f41458f926ccc2725230c56-6"&gt;&lt;/a&gt;        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;
&lt;a name="rest_code_cc20194a6f41458f926ccc2725230c56-7"&gt;&lt;/a&gt;
&lt;a name="rest_code_cc20194a6f41458f926ccc2725230c56-8"&gt;&lt;/a&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;find_prime_number&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_cc20194a6f41458f926ccc2725230c56-9"&gt;&lt;/a&gt;                &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'r'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a name="rest_code_cc20194a6f41458f926ccc2725230c56-10"&gt;&lt;/a&gt;                        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a name="rest_code_cc20194a6f41458f926ccc2725230c56-11"&gt;&lt;/a&gt;                                &lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_cc20194a6f41458f926ccc2725230c56-12"&gt;&lt;/a&gt;                                &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;is_prime_number&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_cc20194a6f41458f926ccc2725230c56-13"&gt;&lt;/a&gt;
&lt;a name="rest_code_cc20194a6f41458f926ccc2725230c56-14"&gt;&lt;/a&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="vm"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;"__main__"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a name="rest_code_cc20194a6f41458f926ccc2725230c56-15"&gt;&lt;/a&gt;        &lt;span class="n"&gt;find_prime_number&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;a name="rest_code_cc20194a6f41458f926ccc2725230c56-16"&gt;&lt;/a&gt;
&lt;a name="rest_code_cc20194a6f41458f926ccc2725230c56-17"&gt;&lt;/a&gt;&lt;span class="sd"&gt;"""&lt;/span&gt;
&lt;a name="rest_code_cc20194a6f41458f926ccc2725230c56-18"&gt;&lt;/a&gt;&lt;span class="sd"&gt;INPUT           Output&lt;/span&gt;
&lt;a name="rest_code_cc20194a6f41458f926ccc2725230c56-19"&gt;&lt;/a&gt;&lt;span class="sd"&gt;        3       3 True&lt;/span&gt;
&lt;a name="rest_code_cc20194a6f41458f926ccc2725230c56-20"&gt;&lt;/a&gt;&lt;span class="sd"&gt;        10      10 False&lt;/span&gt;
&lt;a name="rest_code_cc20194a6f41458f926ccc2725230c56-21"&gt;&lt;/a&gt;&lt;span class="sd"&gt;        15      15 False&lt;/span&gt;
&lt;a name="rest_code_cc20194a6f41458f926ccc2725230c56-22"&gt;&lt;/a&gt;&lt;span class="sd"&gt;        17      17 True&lt;/span&gt;
&lt;a name="rest_code_cc20194a6f41458f926ccc2725230c56-23"&gt;&lt;/a&gt;&lt;span class="sd"&gt;"""&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;If the file does not exists, the program will thrown an exception. We can avoid that by adding try catch as bellow&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_7f51bd2075d84e8cb06d8bfde6a584b6-1"&gt;&lt;/a&gt;&lt;span class="n"&gt;find_prime_number&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_7f51bd2075d84e8cb06d8bfde6a584b6-2"&gt;&lt;/a&gt;        &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a name="rest_code_7f51bd2075d84e8cb06d8bfde6a584b6-3"&gt;&lt;/a&gt;                &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'r'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a name="rest_code_7f51bd2075d84e8cb06d8bfde6a584b6-4"&gt;&lt;/a&gt;                        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a name="rest_code_7f51bd2075d84e8cb06d8bfde6a584b6-5"&gt;&lt;/a&gt;                                &lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_7f51bd2075d84e8cb06d8bfde6a584b6-6"&gt;&lt;/a&gt;                                &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;is_prime_number&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_7f51bd2075d84e8cb06d8bfde6a584b6-7"&gt;&lt;/a&gt;        &lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="ne"&gt;Exception&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a name="rest_code_7f51bd2075d84e8cb06d8bfde6a584b6-8"&gt;&lt;/a&gt;                &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;
&lt;a name="rest_code_7f51bd2075d84e8cb06d8bfde6a584b6-9"&gt;&lt;/a&gt;                &lt;span class="k"&gt;pass&lt;/span&gt;
&lt;/pre&gt;&lt;ul class="simple"&gt;
&lt;li&gt;The code will print the exception instead of crashing now.&lt;/li&gt;
&lt;li&gt;Imagine if we have to check exception for multiple functions in our code. It will not a good idea to have multiple try / catch. wraps is a nice built-in function to make it less frustruated.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a class="reference external" href="http://tamlt2704.github.io/code/functool_wrap_ex2.py.html"&gt;functool_wrap_ex2.py&lt;/a&gt;  &lt;a class="reference external" href="http://tamlt2704.github.io/code/functool_wrap_ex2.py"&gt;(Source)&lt;/a&gt;&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_e89905544c7e46d2a910bdd0dc340a41-1"&gt;&lt;/a&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;sys&lt;/span&gt;
&lt;a name="rest_code_e89905544c7e46d2a910bdd0dc340a41-2"&gt;&lt;/a&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;functools&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;wraps&lt;/span&gt;
&lt;a name="rest_code_e89905544c7e46d2a910bdd0dc340a41-3"&gt;&lt;/a&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;datetime&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;datetime&lt;/span&gt;
&lt;a name="rest_code_e89905544c7e46d2a910bdd0dc340a41-4"&gt;&lt;/a&gt;
&lt;a name="rest_code_e89905544c7e46d2a910bdd0dc340a41-5"&gt;&lt;/a&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;exception_wrapper&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_e89905544c7e46d2a910bdd0dc340a41-6"&gt;&lt;/a&gt;        &lt;span class="nd"&gt;@wraps&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_e89905544c7e46d2a910bdd0dc340a41-7"&gt;&lt;/a&gt;        &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;wrapper&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_e89905544c7e46d2a910bdd0dc340a41-8"&gt;&lt;/a&gt;                &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a name="rest_code_e89905544c7e46d2a910bdd0dc340a41-9"&gt;&lt;/a&gt;                        &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_e89905544c7e46d2a910bdd0dc340a41-10"&gt;&lt;/a&gt;                &lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="n"&gt;Exeption&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a name="rest_code_e89905544c7e46d2a910bdd0dc340a41-11"&gt;&lt;/a&gt;                        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;
&lt;a name="rest_code_e89905544c7e46d2a910bdd0dc340a41-12"&gt;&lt;/a&gt;                        &lt;span class="k"&gt;pass&lt;/span&gt;
&lt;a name="rest_code_e89905544c7e46d2a910bdd0dc340a41-13"&gt;&lt;/a&gt;        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;wrapper&lt;/span&gt;
&lt;a name="rest_code_e89905544c7e46d2a910bdd0dc340a41-14"&gt;&lt;/a&gt;
&lt;a name="rest_code_e89905544c7e46d2a910bdd0dc340a41-15"&gt;&lt;/a&gt;
&lt;a name="rest_code_e89905544c7e46d2a910bdd0dc340a41-16"&gt;&lt;/a&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;running_time&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_e89905544c7e46d2a910bdd0dc340a41-17"&gt;&lt;/a&gt;        &lt;span class="nd"&gt;@wraps&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_e89905544c7e46d2a910bdd0dc340a41-18"&gt;&lt;/a&gt;        &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;wrapper&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_e89905544c7e46d2a910bdd0dc340a41-19"&gt;&lt;/a&gt;                &lt;span class="n"&gt;t1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;now&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a name="rest_code_e89905544c7e46d2a910bdd0dc340a41-20"&gt;&lt;/a&gt;                &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_e89905544c7e46d2a910bdd0dc340a41-21"&gt;&lt;/a&gt;                &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s1"&gt;'function'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="vm"&gt;__name__&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'ran in '&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;now&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;t1&lt;/span&gt;
&lt;a name="rest_code_e89905544c7e46d2a910bdd0dc340a41-22"&gt;&lt;/a&gt;        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;wrapper&lt;/span&gt;
&lt;a name="rest_code_e89905544c7e46d2a910bdd0dc340a41-23"&gt;&lt;/a&gt;
&lt;a name="rest_code_e89905544c7e46d2a910bdd0dc340a41-24"&gt;&lt;/a&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;is_prime_number&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_e89905544c7e46d2a910bdd0dc340a41-25"&gt;&lt;/a&gt;        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;any&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)]):&lt;/span&gt;
&lt;a name="rest_code_e89905544c7e46d2a910bdd0dc340a41-26"&gt;&lt;/a&gt;                &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;
&lt;a name="rest_code_e89905544c7e46d2a910bdd0dc340a41-27"&gt;&lt;/a&gt;        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;
&lt;a name="rest_code_e89905544c7e46d2a910bdd0dc340a41-28"&gt;&lt;/a&gt;
&lt;a name="rest_code_e89905544c7e46d2a910bdd0dc340a41-29"&gt;&lt;/a&gt;&lt;span class="nd"&gt;@running_time&lt;/span&gt;
&lt;a name="rest_code_e89905544c7e46d2a910bdd0dc340a41-30"&gt;&lt;/a&gt;&lt;span class="nd"&gt;@exception_wrapper&lt;/span&gt;
&lt;a name="rest_code_e89905544c7e46d2a910bdd0dc340a41-31"&gt;&lt;/a&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;find_prime_number&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_e89905544c7e46d2a910bdd0dc340a41-32"&gt;&lt;/a&gt;        &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a name="rest_code_e89905544c7e46d2a910bdd0dc340a41-33"&gt;&lt;/a&gt;                &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'r'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a name="rest_code_e89905544c7e46d2a910bdd0dc340a41-34"&gt;&lt;/a&gt;                        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a name="rest_code_e89905544c7e46d2a910bdd0dc340a41-35"&gt;&lt;/a&gt;                                &lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_e89905544c7e46d2a910bdd0dc340a41-36"&gt;&lt;/a&gt;                                &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;is_prime_number&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_e89905544c7e46d2a910bdd0dc340a41-37"&gt;&lt;/a&gt;        &lt;span class="k"&gt;except&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a name="rest_code_e89905544c7e46d2a910bdd0dc340a41-38"&gt;&lt;/a&gt;                &lt;span class="k"&gt;pass&lt;/span&gt;
&lt;a name="rest_code_e89905544c7e46d2a910bdd0dc340a41-39"&gt;&lt;/a&gt;
&lt;a name="rest_code_e89905544c7e46d2a910bdd0dc340a41-40"&gt;&lt;/a&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="vm"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;"__main__"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a name="rest_code_e89905544c7e46d2a910bdd0dc340a41-41"&gt;&lt;/a&gt;        &lt;span class="n"&gt;find_prime_number&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;a name="rest_code_e89905544c7e46d2a910bdd0dc340a41-42"&gt;&lt;/a&gt;
&lt;a name="rest_code_e89905544c7e46d2a910bdd0dc340a41-43"&gt;&lt;/a&gt;&lt;span class="sd"&gt;"""&lt;/span&gt;
&lt;a name="rest_code_e89905544c7e46d2a910bdd0dc340a41-44"&gt;&lt;/a&gt;&lt;span class="sd"&gt;INPUT           Output&lt;/span&gt;
&lt;a name="rest_code_e89905544c7e46d2a910bdd0dc340a41-45"&gt;&lt;/a&gt;&lt;span class="sd"&gt;        3       3 True&lt;/span&gt;
&lt;a name="rest_code_e89905544c7e46d2a910bdd0dc340a41-46"&gt;&lt;/a&gt;&lt;span class="sd"&gt;        10      10 False&lt;/span&gt;
&lt;a name="rest_code_e89905544c7e46d2a910bdd0dc340a41-47"&gt;&lt;/a&gt;&lt;span class="sd"&gt;        15      15 False&lt;/span&gt;
&lt;a name="rest_code_e89905544c7e46d2a910bdd0dc340a41-48"&gt;&lt;/a&gt;&lt;span class="sd"&gt;        17      17 True&lt;/span&gt;
&lt;a name="rest_code_e89905544c7e46d2a910bdd0dc340a41-49"&gt;&lt;/a&gt;&lt;span class="sd"&gt;"""&lt;/span&gt;
&lt;/pre&gt;&lt;ul class="simple"&gt;
&lt;li&gt;As you can see, we can even monitor the run time of the function without changing it internal code.&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</description><guid>http://tamlt2704.github.io/posts/python-functiontools/</guid><pubDate>Sat, 31 Mar 2018 10:02:19 GMT</pubDate></item><item><title>hanoi tower</title><link>http://tamlt2704.github.io/posts/hanoi-tower/</link><dc:creator>petit vietnam</dc:creator><description>&lt;div&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Objective: To move N disks from column one (C1) to colum three (C3).&lt;/strong&gt;&lt;/p&gt;
&lt;img alt="/galleries/hn_tw_1.PNG" src="http://tamlt2704.github.io/galleries/hn_tw_1.PNG"&gt;
&lt;p&gt;&lt;strong&gt;1. First we have to find a way to move top N-1 disks from C1 to C2 using C3 as a temporary column.&lt;/strong&gt;&lt;/p&gt;
&lt;img alt="/galleries/hn_tw_2.PNG" src="http://tamlt2704.github.io/galleries/hn_tw_2.PNG"&gt;
&lt;p&gt;&lt;strong&gt;2. Now there are one disk left at C1, move it directly from C1 to C3&lt;/strong&gt;&lt;/p&gt;
&lt;img alt="/galleries/hn_tw_3.PNG" src="http://tamlt2704.github.io/galleries/hn_tw_3.PNG"&gt;
&lt;p&gt;&lt;strong&gt;3. Next Step is to move N-1 disks from C2 to C3 using C1 as temporary column&lt;/strong&gt;&lt;/p&gt;
&lt;img alt="/galleries/hn_tw_4.PNG" src="http://tamlt2704.github.io/galleries/hn_tw_4.PNG"&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a class="reference external" href="http://tamlt2704.github.io/code/hanoi_tower.py.html"&gt;hanoi_tower.py&lt;/a&gt;  &lt;a class="reference external" href="http://tamlt2704.github.io/code/hanoi_tower.py"&gt;(Source)&lt;/a&gt;&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_e05d541c7dbb4820aff1475c2aacc562-1"&gt;&lt;/a&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;move&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;nb_disk&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;origin&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;target&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;tmp&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_e05d541c7dbb4820aff1475c2aacc562-2"&gt;&lt;/a&gt;        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;nb_disk&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a name="rest_code_e05d541c7dbb4820aff1475c2aacc562-3"&gt;&lt;/a&gt;                &lt;span class="n"&gt;move&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;nb_disk&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;origin&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;tmp&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;target&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_e05d541c7dbb4820aff1475c2aacc562-4"&gt;&lt;/a&gt;                &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s1"&gt;'move disk from {} to {}'&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;origin&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;target&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_e05d541c7dbb4820aff1475c2aacc562-5"&gt;&lt;/a&gt;                &lt;span class="n"&gt;move&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;nb_disk&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;tmp&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;target&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;origin&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_e05d541c7dbb4820aff1475c2aacc562-6"&gt;&lt;/a&gt;
&lt;a name="rest_code_e05d541c7dbb4820aff1475c2aacc562-7"&gt;&lt;/a&gt;&lt;span class="n"&gt;move&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</description><category>algorithm</category><guid>http://tamlt2704.github.io/posts/hanoi-tower/</guid><pubDate>Sat, 31 Mar 2018 09:24:38 GMT</pubDate></item><item><title>blog with nikola</title><link>http://tamlt2704.github.io/posts/blog-with-nikola/</link><dc:creator>petit vietnam</dc:creator><description>&lt;div&gt;&lt;ol class="arabic"&gt;
&lt;li&gt;&lt;p class="first"&gt;&lt;strong&gt;Why nikola&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;I used to use jekyll for blogging but I always have troubles with installing ruby and their dependencies. Futhermore, modifying the blog in a language that I'm not familiar is not a good idea. Since I already have python in my system, adding nikola is just one line of code. Start with something I know gives me the power to overcome the procastination j.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;&lt;strong&gt;Start blogging with nikola and publish to github&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Create a repository on github follow the name convention &amp;lt;username&amp;gt;.github.io&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Clone repository&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;pre class="code shell"&gt;&lt;a name="rest_code_72a3bd0bf74a48448b5bc6dc0b212ba0-1"&gt;&lt;/a&gt;git clone http://github.com/&amp;lt;username&amp;gt;/&amp;lt;username&amp;gt;.github.io
&lt;/pre&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;Install nikola&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;pre class="code shell"&gt;&lt;a name="rest_code_654623be500f42c0ad27cc9e9d66c387-1"&gt;&lt;/a&gt;pip install nikola
&lt;/pre&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;Init new blog&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_e7ca9df678534ed6a827e546da5e5e2f-1"&gt;&lt;/a&gt;&lt;span class="n"&gt;nikola&lt;/span&gt; &lt;span class="n"&gt;init&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt;
&lt;/pre&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;Create new post&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_6a82596a1eeb4d55b5737c032184ae5a-1"&gt;&lt;/a&gt;&lt;span class="n"&gt;nikola&lt;/span&gt; &lt;span class="n"&gt;new_post&lt;/span&gt;
&lt;a name="rest_code_6a82596a1eeb4d55b5737c032184ae5a-2"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;edit&lt;/span&gt; &lt;span class="n"&gt;your&lt;/span&gt; &lt;span class="n"&gt;post&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;Create new page&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_fba8f511c2f34109972325ed8717a928-1"&gt;&lt;/a&gt;&lt;span class="n"&gt;nikola&lt;/span&gt; &lt;span class="n"&gt;new_page&lt;/span&gt;
&lt;/pre&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;View your blog&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_1a24d834745b420690347fb3a6789260-1"&gt;&lt;/a&gt;&lt;span class="n"&gt;nikola&lt;/span&gt; &lt;span class="n"&gt;build&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;nikola&lt;/span&gt; &lt;span class="n"&gt;serve&lt;/span&gt;
&lt;/pre&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;Publish to github&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_df156657561049e298496d3ceb005036-1"&gt;&lt;/a&gt;&lt;span class="n"&gt;nikola&lt;/span&gt; &lt;span class="n"&gt;github_deploy&lt;/span&gt;
&lt;/pre&gt;&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Enjoy your blog at &lt;a class="reference external" href="http://tamlt2704.github.io/"&gt;http:/&lt;/a&gt;/&amp;lt;username&amp;gt;.github.io and happy blogging!&lt;/p&gt;&lt;/div&gt;</description><category>tools</category><guid>http://tamlt2704.github.io/posts/blog-with-nikola/</guid><pubDate>Sat, 31 Mar 2018 06:30:33 GMT</pubDate></item><item><title>docker basic</title><link>http://tamlt2704.github.io/posts/docker-basic/</link><dc:creator>petit vietnam</dc:creator><description>&lt;span&gt;&lt;/span&gt;</description><category>tools</category><guid>http://tamlt2704.github.io/posts/docker-basic/</guid><pubDate>Sat, 31 Mar 2018 06:28:45 GMT</pubDate></item></channel></rss>